@using System.Security.Claims
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model APP_LAWYER.DAL.Entities.Subcategory

@{
    ViewBag.Title = Model.Name;
    Layout = "_Layout";
}

@section MetaTags {
    <meta name="title" content="@Model.MetaTitle">
    <meta name="keywords" content="@Model.MetaKeywords">
    <meta name="description" content="@Model.MetaDescription">
}

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <h2>@Model.Name</h2>
            @if (Model.SubcategoryVideos != null)
            {
                @* <h3>Videos:</h3> *@
                <div id="videoContainer" class="mb-3">
                    @for (int i = 0; i < Model.SubcategoryVideos.Count; i++)
                    {
                        var subcategoryVideo = Model.SubcategoryVideos[i];
                        <div class="video" style="display: @(i == 0 ? "block" : "none")" data-description="@subcategoryVideo.Video.Description">
                            <div class="embed-responsive embed-responsive-16by9">
                                <iframe class="embed-responsive-item" src="https://www.youtube.com/embed/@(subcategoryVideo.Video.Url.Split('/').Last())" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                            </div>
                            <h4>@subcategoryVideo.Video.Title</h4>
                        </div>
                    }
                    <button id="nextVideo" class="btn btn-primary">Next Video</button>
                </div>
            }
        </div>
        <div class="col-md-4">
            <ul id="videoList" class="list-group">
                @for (int i = 0; i < Model.SubcategoryVideos.Count; i++)
                    {
                        var subcategoryVideo = Model.SubcategoryVideos[i];
                        <li class="list-group-item">
                            <a href="#" class="video-item" data-index="@i">@subcategoryVideo.Video.Title</a>
                        </li>
                    }
            </ul>
        </div>
    </div>

    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <a class="nav-link active" id="description-tab" data-bs-toggle="tab" href="#description" role="tab" aria-controls="description" aria-selected="true">Описание дела</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="content-tab" data-bs-toggle="tab" href="#content" role="tab" aria-controls="content" aria-selected="false">Юридическое заключение и законодательство</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="video-description-tab" data-bs-toggle="tab" href="#video-description" role="tab" aria-controls="video-description" aria-selected="false">Образец документа</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="comments-tab" data-bs-toggle="tab" href="#comments" role="tab" aria-controls="comments" aria-selected="false">Комментарий</a>
        </li>
    </ul>
    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="description-tab">
            <p>@Model.FullDescription</p>
        </div>
        <div class="tab-pane fade" id="content" role="tabpanel" aria-labelledby="content-tab">
            <p>@Model.Content</p>
        </div>
        <div class="tab-pane fade" id="video-description" role="tabpanel" aria-labelledby="video-description-tab">
            <p id="videoDescription"></p>
        </div>

        <div class="tab-pane fade" id="comments" role="tabpanel" aria-labelledby="comments-tab">
            <div class="container">
                <!-- Add comment form -->
                <h4>Оставьте вопрос:</h4>
                <form id="createCommentForm" method="post" action="/Comment/Create">
                    <div class="form-group">
                        <label for="commentContent">Вопрос:</label>
                        <textarea class="form-control" id="commentContent" name="Content" rows="3"></textarea>
                    </div>
                    <input type="hidden" name="SubcategoryId" value="@Model.Id"/>
                    <button type="submit" class="btn btn-primary">Отправить</button>
                </form>
                <!-- Existing comments -->
                <!-- Existing comments -->
                <h3>Вопросы и ответы:</h3>
                <div id="commentContainer">

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://www.youtube.com/iframe_api"></script>
        <script>
            var players = [];
            var currentVideoIndex = 0;
            var videos = $("#videoContainer .video");
    
            function onYouTubeIframeAPIReady() {
                console.log("onYouTubeIframeAPIReady called");
                $('.video iframe').each(function(index, iframe) {
                    var player = new YT.Player(iframe, {
                        events: {
                            'onReady': function(event) {
                                players.push(event.target);
                                console.log("Player created:", event.target);  // Log the player that was created
                            },
                            'onError': function(event) {
                                console.error("An error occurred with the YouTube player", event);
                            }
                        }
                    });
                });
                console.log("Players:", players);  // Log the players array
            }

        videos.each(function() {
            var src = $(this).find("iframe").attr("src");
            console.log("Video source URL:", src);
        });
            
        function updateVideoDescription() {
            var description = $(videos[currentVideoIndex]).data("description");
            $("#videoDescription").text(description);
        }

        function stopCurrentVideo() {
            if (players[currentVideoIndex] && players[currentVideoIndex].getPlayerState() !== -1) {
                    console.log("Stopping video:", currentVideoIndex, "Player state before:", players[currentVideoIndex].getPlayerState());
                    players[currentVideoIndex].stopVideo();
                    console.log("Player state after:", players[currentVideoIndex].getPlayerState());
                } else {
                    console.log("Unable to stop video:", currentVideoIndex, "Player:", players[currentVideoIndex]);
                }
        }

        $("#nextVideo").click(function () {
            console.log("Next video button clicked");
            stopCurrentVideo();
            $(videos[currentVideoIndex]).hide();
            currentVideoIndex++;
            if (currentVideoIndex >= videos.length) {
                currentVideoIndex = 0;
            }
            $(videos[currentVideoIndex]).show();
            updateVideoDescription();
            if (players[currentVideoIndex]) {
                players[currentVideoIndex].playVideo();
            }
        });

        $(".video-item").click(function () {
            console.log("Video item clicked");
            stopCurrentVideo();
            var index = $(this).data("index");
            $(videos[currentVideoIndex]).hide();
            currentVideoIndex = index;
            $(videos[currentVideoIndex]).show();
            updateVideoDescription();
            if (players[currentVideoIndex]) {
                players[currentVideoIndex].playVideo();
            }
        });

        updateVideoDescription();
    </script>
}


